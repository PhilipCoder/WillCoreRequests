//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeBuilder.JS.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CodeBuilder.JS.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     &lt;&lt; PropertyComment &gt;&gt;
        ///    this.&lt;&lt; propertyName &gt;&gt; = dataObject.&lt;&lt; propertyName &gt;&gt;;
        ///.
        /// </summary>
        internal static string assignmentFromObject {
            get {
                return ResourceManager.GetString("assignmentFromObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  /**
        ///    * &lt;&lt; description &gt;&gt;
        ///&lt;&lt; ParameterTypeComment &gt;&gt;
        ///*/.
        /// </summary>
        internal static string classConstructorComment {
            get {
                return ResourceManager.GetString("classConstructorComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;&lt; POCOImport &gt;&gt;
        ///
        ///class &lt;&lt; name &gt;&gt; 
        ///{
        ///    &lt;&lt; ClassConstructorComment &gt;&gt;
        ///    constructor(&lt;&lt; constructorParameters &gt;&gt;) 
        ///    {
        ///&lt;&lt; DirectAssignmentProperty &gt;&gt;
        ///    }
        ///    _loadFromObject(dataObject)
        ///    {
        ///&lt;&lt; FromObjectAssignmentProperty &gt;&gt;        
        ///    }
        ///}
        ///
        ///&lt;&lt; ExportPOCO &gt;&gt;.
        /// </summary>
        internal static string classPOKO {
            get {
                return ResourceManager.GetString("classPOKO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to import {request,globalTokens} from &quot;./request/request.js&quot;;
        ///&lt;&lt; RequestContextImport &gt;&gt;
        ///
        ///class &lt;&lt; name &gt;&gt; 
        ///{
        ///    &lt;&lt; ClassConstructorComment &gt;&gt;
        ///    constructor(&lt;&lt; constructorParameters &gt;&gt;) 
        ///    {
        ///&lt;&lt; DirectAssignmentProperty &gt;&gt;
        ///&lt;&lt; RunRequestProperty &gt;&gt;
        ///    }
        ///    setHttpHeaders(headerObject)
        ///    {
        ///       for (var key in headerObject){
        ///            globalTokens[key] = headerObject[key];
        ///        }
        ///    }
        ///&lt;&lt; RunMethodRequest &gt;&gt;
        ///}
        ///
        ///&lt;&lt; ExportRequestContext &gt;&gt;.
        /// </summary>
        internal static string classRequest {
            get {
                return ResourceManager.GetString("classRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;&lt; PropertyComment &gt;&gt;
        ///this.&lt;&lt; propertyName &gt;&gt; = &lt;&lt; propertyName &gt;&gt;;
        ///.
        /// </summary>
        internal static string directAssignment {
            get {
                return ResourceManager.GetString("directAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to export {&lt;&lt; types &gt;&gt;};.
        /// </summary>
        internal static string exports {
            get {
                return ResourceManager.GetString("exports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;&lt; function[headerComment] &gt;&gt;
        ///
        ///&lt;&lt; function[constructorComment] &gt;&gt;
        ///function &lt;&lt; function[name] &gt;&gt; (&lt;&lt; function[constructorParameters] &gt;&gt;){
        ///&lt;&lt; function[property] &gt;&gt;
        ///    &lt;&lt; function[httpHeaderFunctionComment] &gt;&gt;
        ///    this.setHttpHeaders = function(headerObject) {
        ///        for (var key in headerObject) {
        ///            globalTokens[key] = headerObject[key];
        ///        }
        ///    }
        ///&lt;&lt; function[method] &gt;&gt;
        ///}
        ///
        ///
        ///.
        /// </summary>
        internal static string function {
            get {
                return ResourceManager.GetString("function", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  &lt;&lt; ClassConstructorComment &gt;&gt;
        ///function &lt;&lt; name &gt;&gt; (&lt;&lt; constructorParameters &gt;&gt;)
        ///{
        ///&lt;&lt; DirectAssignmentProperty &gt;&gt;
        ///}
        ///
        /// &lt;&lt; name &gt;&gt;.prototype._loadFromObject = function(dataObject)
        ///{
        ///&lt;&lt; FromObjectAssignmentProperty &gt;&gt;        
        ///}
        ///.
        /// </summary>
        internal static string functionPOKO {
            get {
                return ResourceManager.GetString("functionPOKO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;&lt; ClassConstructorComment &gt;&gt;
        ///function &lt;&lt; name &gt;&gt; (&lt;&lt; constructorParameters &gt;&gt;)
        ///{
        ///&lt;&lt; DirectAssignmentProperty &gt;&gt;
        ///&lt;&lt; RunRequestProperty &gt;&gt;
        ///    this.setHttpHeaders = function (headerObject)
        ///    {
        ///        for (var key in headerObject)
        ///        {
        ///              globalTokens[key] = headerObject[key];
        ///        }
        ///    }
        ///&lt;&lt; RunMethodRequest &gt;&gt;
        ///}
        ///
        ///
        ///.
        /// </summary>
        internal static string functionRequest {
            get {
                return ResourceManager.GetString("functionRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to import {&lt;&lt; types &gt;&gt;} from &quot;&lt;&lt; url &gt;&gt;&quot;;.
        /// </summary>
        internal static string import {
            get {
                return ResourceManager.GetString("import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;&lt; PropertyComment &gt;&gt;
        ///this.&lt;&lt; propertyName &gt;&gt; = &lt;&lt; propertyName &gt;&gt; ? &lt;&lt; propertyName &gt;&gt;.map(x=&gt; new &lt;&lt; type &gt;&gt;(&lt;&lt; parameters &gt;&gt;)) : [];.
        /// </summary>
        internal static string newArrayAssignment {
            get {
                return ResourceManager.GetString("newArrayAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;&lt; PropertyComment &gt;&gt;
        ///this.&lt;&lt; propertyName &gt;&gt; = &lt;&lt; propertyName &gt;&gt; ? &lt;&lt; propertyName &gt;&gt;.map(function(x){ return new &lt;&lt; type &gt;&gt;(&lt;&lt; parameters &gt;&gt;);}) : [];.
        /// </summary>
        internal static string newArrayAssignmentES5 {
            get {
                return ResourceManager.GetString("newArrayAssignmentES5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;&lt; PropertyComment &gt;&gt;
        ///this.&lt;&lt; propertyName &gt;&gt; =  dataObject.&lt;&lt; propertyName &gt;&gt; ? dataObject.&lt;&lt; propertyName &gt;&gt;.map(row =&gt; ( row =&gt; { let newObj = new &lt;&lt; type &gt;&gt;(); newObj._loadFromObject(row); return newObj; })(row)) : [];
        ///.
        /// </summary>
        internal static string newArrayAssignmentFromObject {
            get {
                return ResourceManager.GetString("newArrayAssignmentFromObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;&lt; PropertyComment &gt;&gt;
        ///this.&lt;&lt; propertyName &gt;&gt; =  dataObject.&lt;&lt; propertyName &gt;&gt; ? dataObject.&lt;&lt; propertyName &gt;&gt;.map(function(row) { var newObj = new &lt;&lt; type &gt;&gt;(); newObj._loadFromObject(row); return newObj; }) : [];
        ///.
        /// </summary>
        internal static string newArrayAssignmentFromObjectES5 {
            get {
                return ResourceManager.GetString("newArrayAssignmentFromObjectES5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;&lt; PropertyComment &gt;&gt;
        ///this.&lt;&lt; propertyName &gt;&gt; = new &lt;&lt; type &gt;&gt;(&lt;&lt; parameters &gt;&gt;);
        ///.
        /// </summary>
        internal static string newAssignment {
            get {
                return ResourceManager.GetString("newAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;&lt; PropertyComment &gt;&gt;
        ///this.&lt;&lt; propertyName &gt;&gt; = new &lt;&lt; type &gt;&gt;();
        ///this.&lt;&lt; propertyName &gt;&gt;._loadFromObject(dataObject.&lt;&lt; propertyName &gt;&gt;);
        ///.
        /// </summary>
        internal static string newAssignmentFromObject {
            get {
                return ResourceManager.GetString("newAssignmentFromObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     * @param { &lt;&lt; type &gt;&gt; } &lt;&lt; name &gt;&gt;.
        /// </summary>
        internal static string parameterTypeComment {
            get {
                return ResourceManager.GetString("parameterTypeComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        ///    * @type &lt;&lt; type &gt;&gt;
        ///*/.
        /// </summary>
        internal static string propertyComment {
            get {
                return ResourceManager.GetString("propertyComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var globalTokens = {};
        ///
        ///class request {
        ///    constructor(baseURL, url, method, requestBindings, resultType) {
        ///        if (!baseURL.endsWith(&quot;/&quot;)) {
        ///            baseURL = baseURL + &quot;/&quot;;
        ///        }
        ///        this.BaseURL = baseURL;
        ///        this.URL = this.BaseURL + url;
        ///        this.Method = method;
        ///        this.RequestBindings = requestBindings;
        ///        this.ResultType = resultType;
        ///    }
        ///
        ///    async ExecuteRequest(parms) {
        ///        var that = this;
        ///        var requestBody = {};
        ///        var reques [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string request {
            get {
                return ResourceManager.GetString("request", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  /**
        ///    * &lt;&lt; description &gt;&gt;
        ///&lt;&lt; ParameterTypeComment &gt;&gt;
        ///*/.
        /// </summary>
        internal static string requestContainerComment {
            get {
                return ResourceManager.GetString("requestContainerComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var globalTokens = {};
        ////**
        /// * A very simple and lightweight cross browser polyfill for a JS promise.
        /// * Author : Philip Schoeman
        /// * @param {Function} func
        /// */
        ///var corePromise = function (func) {
        ///    var promiseScope = this;
        ///    this.funcToRun = null;
        ///    this.funcCatch = null;
        ///    this.then = function (funcThen, funcCatch) {
        ///        promiseScope.funcToRun = funcThen;
        ///        if (funcCatch) {
        ///            promiseScope.funcCatch = funcCatch;
        ///        }
        ///    };
        ///    this.catch = function (funcCatch [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string requestES5 {
            get {
                return ResourceManager.GetString("requestES5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     &lt;&lt; RunRequestMethodComment &gt;&gt;
        ///    &lt;&lt; name &gt;&gt; (&lt;&lt; parameters &gt;&gt;)
        ///    {
        ///        return this._&lt;&lt; name &gt;&gt;.ExecuteRequest({&lt;&lt; requestObj &gt;&gt;});
        ///    }
        ///.
        /// </summary>
        internal static string runRequestMethod {
            get {
                return ResourceManager.GetString("runRequestMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  /**
        ///    * &lt;&lt; description &gt;&gt;
        ///&lt;&lt; ParameterTypeComment &gt;&gt;
        ///    * @return {&lt;&lt; resultType &gt;&gt;}
        ///*/.
        /// </summary>
        internal static string runRequestMethodComment {
            get {
                return ResourceManager.GetString("runRequestMethodComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     &lt;&lt; RunRequestMethodComment &gt;&gt;
        ///    this.&lt;&lt; name &gt;&gt; (&lt;&lt; parameters &gt;&gt;)
        ///    {
        ///        return this._&lt;&lt; name &gt;&gt;.ExecuteRequest({&lt;&lt; requestObj &gt;&gt;});
        ///    }
        ///.
        /// </summary>
        internal static string runRequestMethodFunction {
            get {
                return ResourceManager.GetString("runRequestMethodFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to this._&lt;&lt; name &gt;&gt; = new request(this.baseUrl,&quot;&lt;&lt; url &gt;&gt;&quot;,&quot;&lt;&lt; method &gt;&gt;&quot;,&lt;&lt; parameterSourceBindings &gt;&gt;, &lt;&lt; resultType &gt;&gt;);
        ///.
        /// </summary>
        internal static string runRequestProperty {
            get {
                return ResourceManager.GetString("runRequestProperty", resourceCulture);
            }
        }
    }
}
